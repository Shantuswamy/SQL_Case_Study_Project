--1. Display the number of states present in the LocationTable

select count(distinct state) as no_of_states
from location
--REPORT)-->IN LOCATION TABLE 20 STATES ARE PRESENT

--2. How many products are of regular type?

SELECT COUNT(PRODUCT) 
FROM Product
WHERE TYPE='REGULAR'

--REPORT)-->THERE 8 REGULAR TYPE OF PRODUCTS ARE IN THE TABLE PRODUCT

--3. How much spending has been done on marketing of product ID 1?
SELECT SUM(Marketing)
FROM FACT
WHERE ProductId=1

--REPORT)-->TOTAL 4658 RS HAS BEEN SPENT ON THE MARKETING OF THE PRODUCT ID 1

--4. What is the minimum sales of a product?

SELECT MIN(SALES)
FROM fact
--REPORT)--> THE MINIMUM SALES OF THE PRODUCT IS 17

--5. Display the max Cost of Good Sold (COGS)
SELECT MAX(COGS)
FROM FACT
--REPORT)--> THE MAXIMUM COST OF TGOOD SALES IS 365

--6. Display the details of the product where product type is coffee.
SELECT *
FROM FACT AS F INNER JOIN PRODUCT AS P
ON F.ProductId=P.ProductId
WHERE Product_Type='COFFEE'


--7. Display the details where total expenses are greater than 40.
SELECT * 
FROM FACT
WHERE Total_Expenses>=40
ORDER BY ProductId

--8. What is the average sales in area code 719?
SELECT AVG(SALES)
FROM FACT WHERE Area_Code=719
--REPORT)--> THE AVG SALES AT AREA CODE 719 IS 186


--9. Find out the total profit generated by Colorado state.
SELECT SUM(Profit)
FROM FACT F INNER JOIN Location L
ON F.Area_Code=L.Area_Code
WHERE STATE='COLORADO'
--REPORT)-->THE TOTAL PROFIT OF THE STATE COLORADO IS 17743

--10. Display the average inventory for each product ID.
SELECT AVG(Inventory) AS AVG_INVENTORY , ProductId
FROM fact
GROUP BY ProductId
ORDER BY ProductId

--11. Display state in a sequential order in a Location Table
SELECT  DISTINCT STATE 
FROM Location
ORDER BY  STATE


/*12. Display the average budget of the Product where the average budget
margin should be greater than 100.*/
SELECT AVG(Budget_Margin) AS AVG_MRGN_BUDGET
FROM FACT 
GROUP BY ProductId
HAVING AVG(Budget_Margin)>100

--13. What is the total sales done on date 2010-01-01?
SELECT SUM(SALES) TOTAL_SALES , DATE,ProductId
FROM FACT
WHERE DATE='2010-01-01'
GROUP BY DATE,ProductId

--14. Display the average total expense of each product ID on an individual date.
SELECT AVG(Total_Expenses) AS AVG_TOTAL_EXPENESES,DATE
FROM FACT
GROUP BY DATE
ORDER BY DATE


/*15. Display the table with the following attributes such as date, productID, product_type,
product, sales, profit, state, area_code*/
SELECT F.date,P.productID, P.product_type,
P.product, F.sales, F.profit, L.state, F.area_code
FROM fact F INNER JOIN Product P
ON F.ProductId=P.ProductId
INNER JOIN Location L 
ON F.Area_Code=L.Area_Code


--16. Display the rank without any gap to show the sales wise rank.
SELECT SALES,DENSE_RANK() OVER (ORDER BY SALES DESC)
FROM FACT 

--17. Find the state wise profit and sales.
SELECT  STATE,SALES,PROFIT
FROM FACT F INNER JOIN Location L
ON F.Area_Code=L.Area_Code
GROUP BY  STATE,SALES,PROFIT
ORDER BY PROFIT DESC

--18. Find the state wise profit and sales along with the productname.
SELECT  STATE,SALES,PROFIT,Product
FROM FACT F INNER JOIN Location L
ON F.Area_Code=L.Area_Code
INNER JOIN PRODUCT P
ON F.ProductId=P.ProductId 
GROUP BY  STATE,SALES,PROFIT,Product
ORDER BY PROFIT DESC


--19. If there is an increase in sales of 5%, calculate the increasedsales.
SELECT SALES, SALES*1.05
FROM FACT

--20. Find the maximum profit along with the product ID and producttype.
SELECT MAX(PROFIT) MAX_PROFIT , P.ProductId,P.product_type
FROM fact F INNER JOIN Product P
ON F.ProductId=P.ProductId
GROUP BY P.ProductId,P.product_type

--21. Create a stored procedure to fetch the result according to the product typefrom Product Table.
GO
CREATE PROCEDURE RESULT (@PRODUCT VARCHAR(100))
AS 
BEGIN

SELECT *
FROM PRODUCT
WHERE Product_Type=@PRODUCT

END

EXECUTE  RESULT 'COFFEE'

/*22. Write a query by creating a condition in which if the total
expenses is lessthan60 then it is a profit or else loss.*/

SELECT PRODUCTID, IIF(TOTAL_EXPENSES >60 ,'PROFIT','LOSS' )FROM FACT


/*23. Give the total weekly sales value with the date and product IDdetails.
Useroll-up to pull the data in hierarchical order*/

SELECT DATEPART(WEEK,DATE),ProductId,SUM(SALES)
FROM FACT
GROUP BY  DATE,ProductId
WITH ROLLUP


/*25. Create a user-defined function for the product table to fetch a particular
product type based upon the user’s preference.*/











SELECT *FROM PRODUCT
select * from fact
select *from Location